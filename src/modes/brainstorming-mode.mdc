---
description: Initialize and analyze new feature ideas before transitioning to Planning, leveraging advanced MCP tools for comprehensive ideation.
globs:
alwaysApply: false
---
# ðŸ’¡ Brainstorming Mode
Initialize and analyze new feature ideas before transitioning to Planning, leveraging advanced MCP tools for comprehensive ideation **with structured documentation**.

## ðŸŽ¯ Activation
- Automatically by `master-orchestrator` when detecting feature requests without Blueprint/Tasks
- Manually: user types "start brainstorming" or "@brainstorm"

## ðŸ§° Enhanced MCP Tools Integration

### Required Tools for This Mode:
1. **Sequential Thinking** - For structured ideation process
2. **Web Search** - For market research and trend analysis  
3. **Context7 MCP** - For technology and library exploration
4. **Interactive MCP** - For real-time stakeholder validation

## ðŸ“‹ Objectives
1. Collect raw ideas/requirements from user using **Interactive MCP**
2. Research market trends and best practices via **Web Search**
3. Explore available technologies and libraries through **Context7**
4. Use **Sequential Thinking** for systematic analysis (MoSCoW/Kano/Value vs Effort)
5. **CREATE ORGANIZED DOCUMENTATION** during research phase
6. Generate **Idea Backlog** (`docs/ideas/idea-backlog.md`)
7. For selected ideas â†’ generate Blueprint framework (`templates/blueprint-template.yaml`)
8. Preliminary estimation (story points + complexity) & Risk/Benefit analysis
9. Conclude: transition to **Planning Mode** for detailed blueprint and task creation

## ðŸ“š Simple Documentation Organization

### Documentation Structure:
```
docs/ideas/
â”œâ”€â”€ [feature-name]/
â”‚   â”œâ”€â”€ requirements.md
â”‚   â”œâ”€â”€ research.md  
â”‚   â”œâ”€â”€ analysis.md
â”‚   â””â”€â”€ summary.md
â”œâ”€â”€ idea-backlog.md
â””â”€â”€ README.md
```

### Documentation Files per Feature:
1. **`requirements.md`** - User needs, stakeholder input
2. **`research.md`** - Market trends, technology analysis
3. **`analysis.md`** - Risk assessment, priority matrix
4. **`summary.md`** - Final recommendations and handoff info

## ðŸ›  Enhanced Workflow with MCP Tools

### Phase 1: Requirements & Initial Research
1. **Create feature folder**: `docs/ideas/[feature-name]/`
2. **Requirements gathering** (Interactive MCP)
   - User stories and needs analysis
   - Document in `requirements.md`
3. **Initial research** (Web Search + Context7)
   - Market trends and technology options
   - Document in `research.md`

### Phase 2: Analysis & Prioritization
4. **Systematic analysis** (Sequential Thinking)
   - MoSCoW prioritization
   - Risk vs benefit analysis  
   - Document in `analysis.md`
5. **Stakeholder validation** (Interactive MCP)
   - Present findings for feedback
   - Update documentation accordingly

### Phase 3: Summary & Handoff
6. **Create summary** 
   - Consolidate all findings
   - Technology recommendations
   - Implementation plan outline
   - Document in `summary.md`
7. **Update idea backlog**
   - Add feature to central tracking
   - Link to detailed documentation

## ðŸŒ¿ Git Workflow
Follow the unified commit rules defined in `utilities/commit-rules.mdc` for:
- Branch naming: `ideas/<feature-name>` for brainstorming activities
- Commit messages: `idea(<scope>): <description>` format
- Auto-commit documentation files as they are created
- Separate commits for each major research milestone

## ðŸ”„ Transition Strategy
- When user selects **Approve Ideas** â†’ Orchestrator sets `brainstorm_requested = false`, switch to `CURRENT_MODE = Planning`
- Transfer all documentation files to Planning agent context
- Include MCP research findings in blueprint creation
- Provide clear handoff with `summary.md` as primary reference

## ðŸš¨ Simple Guardrails
- No code generation during brainstorming
- No writes to `src/` directory
- **MANDATORY**: Create feature folder in `docs/ideas/` for each new feature
- **MANDATORY**: Use the 4 core documentation files (requirements, research, analysis, summary)
- **Documentation Standards**:
  - Include timestamps and source citations
  - Cross-reference between the 4 files when relevant
  - Keep files focused and actionable
- **MCP Tool Usage**:
  - Document all MCP tool outputs in appropriate files
  - Use Web Search responsibly
  - Sequential Thinking for structured analysis only

## ðŸ“Š Success Metrics
- âœ… Feature folder created with all 4 documentation files
- âœ… Requirements validated with stakeholders  
- âœ… Technology options researched and documented
- âœ… Risk analysis completed with mitigation strategies
- âœ… Summary provides clear handoff to Planning mode
- âœ… Idea backlog updated with new feature entry
