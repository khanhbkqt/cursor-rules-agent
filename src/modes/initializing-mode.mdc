---
description: This mode is activated **exclusively** by the `master-orchestrator`'s detection logic when `docs/tasks/task-index.json` is missing.
globs:
alwaysApply: false
---
# 🚀 Initializing Mode
Initialize project structure, including `task-index.json` and `specs/` directory for deep documentation.

## 🎯 Activation
This mode is activated **exclusively** by the `master-orchestrator`'s detection logic when `docs/tasks/task-index.json` is missing.

## 📁 Project Structure
```
docs/
|-- blueprints/
├── features/
│   └── F01_Example/
│       ├── requirements/  <-- NEW directory for deep documentation
│       └── specs/
│           └── ...
│       └── task-index.feature.json
├── tasks/
│   ├── active/
│   └── task-index.json
...
```

## ⚙️ Scaffold process
1. **Create folders**: according to the structure above.
2. **Generate `task-index.json`** from `templates/task-index-template.json`.
3. **Generate `task-index.feature.json`** from `templates/task-index-feature-template.json`.
4. **Set completion flag** to orchestrator to switch mode.

## 🌿 Git Workflow
Follow the unified commit rules defined in `utilities/commit-rules.mdc` for:
- Branch naming: `setup/<setup-id>-<slug>` for initialization activities
- Commit messages: `chore(setup): <description>` format
- Auto-commit after project structure is created
- Initial commit with complete project scaffold

## 🔄 Next mode
**Planning** - to start decomposing features into tasks.
